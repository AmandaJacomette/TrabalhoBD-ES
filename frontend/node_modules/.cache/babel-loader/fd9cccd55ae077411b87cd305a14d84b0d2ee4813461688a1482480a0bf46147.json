{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport storage from './storage';\nexport default function useStorage(key) {\n  _s();\n  const [state, setState] = useState(() => storage.get(key));\n  const set = useCallback(newValue => {\n    storage.set(key, newValue);\n    setState(newValue);\n  }, [key]);\n  const remove = useCallback(() => {\n    storage.remove(key);\n    setState(undefined);\n  }, [key]);\n  return [state, set, remove];\n}\n_s(useStorage, \"Ad//IS+ZV/RMWRSs+aWXJufhifg=\");","map":{"version":3,"names":["useCallback","useState","storage","useStorage","key","_s","state","setState","get","set","newValue","remove","undefined"],"sources":["C:/Users/Beatriz/Documents/GitHub/TrabalhoBD-ES/frontend/src/components/utils/useStorage.js"],"sourcesContent":["import { useCallback, useState } from 'react';\r\nimport storage from './storage';\r\n\r\nexport default function useStorage(key) {\r\n  const [state, setState] = useState(() => storage.get(key));\r\n\r\n  const set = useCallback(newValue => {\r\n    storage.set(key, newValue);\r\n    setState(newValue);\r\n  }, [key]);\r\n\r\n  const remove = useCallback(() => {\r\n    storage.remove(key);\r\n    setState(undefined);\r\n  }, [key]);\r\n\r\n  return [state, set, remove];\r\n}"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,OAAOC,OAAO,MAAM,WAAW;AAE/B,eAAe,SAASC,UAAUA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,MAAMC,OAAO,CAACM,GAAG,CAACJ,GAAG,CAAC,CAAC;EAE1D,MAAMK,GAAG,GAAGT,WAAW,CAACU,QAAQ,IAAI;IAClCR,OAAO,CAACO,GAAG,CAACL,GAAG,EAAEM,QAAQ,CAAC;IAC1BH,QAAQ,CAACG,QAAQ,CAAC;EACpB,CAAC,EAAE,CAACN,GAAG,CAAC,CAAC;EAET,MAAMO,MAAM,GAAGX,WAAW,CAAC,MAAM;IAC/BE,OAAO,CAACS,MAAM,CAACP,GAAG,CAAC;IACnBG,QAAQ,CAACK,SAAS,CAAC;EACrB,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,OAAO,CAACE,KAAK,EAAEG,GAAG,EAAEE,MAAM,CAAC;AAC7B;AAACN,EAAA,CAduBF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}